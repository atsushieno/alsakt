plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.30'
    id 'org.bytedeco.gradle-javacpp-build' version '1.5.5'
    id 'maven-publish'
    id 'signing'
}

ext {
    javacppPlatform = 'linux-x86_64' // ugh, can we cross-compile for ,linux-x86,linux-arm64,linux-arm32 as well?
}

group 'dev.atsushieno'
version '0.1.4.1'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

dependencies {
    api "org.bytedeco:javacpp:1.5.5"
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

tasks.withType(org.bytedeco.gradle.javacpp.BuildTask) {
    // set here default values for all build tasks below, typically just includePath and linkPath,
    // but also properties to set the path to the NDK and its compiler in the case of Android
    includePath = [project.projectDir.toString() + '/alsa-headers', project.projectDir.toString() + '/dummy_headers'] // It is likely dependent of your Linux desktop distro.
    deleteJniFiles false
}

javacppBuildCommand {
    // typically set here the buildCommand to the script that fills up includePath and linkPath
}

javacppBuildParser {
    // typically set here the classOrPackageNames to class names implementing InfoMap
    classOrPackageNames = ['alsakt_presets.Alsa', 'libc_presets.HackyPoll']
}

javacppBuildCompiler {
    // typically set here boolean flags like copyLibs
}

test {
    useJUnitPlatform()
}

afterEvaluate {
    afterEvaluate {

        publishing {
            publications {
                maven(MavenPublication) {
                    pom {
                        name.set('alsakt-javacpp')
                        description.set('(partial) ALSA JNI binding using JavaCPP')
                        url.set('https://github.com/atsushieno/alsakt')
                        scm { url.set('https://github.com/atsushieno/alsakt') }
                        licenses {
                            license {
                                name.set('the MIT License')
                                url.set('https://github.com/atsushieno/alsakt/blob/main/LICENSE')
                            }
                        }
                        developers {
                            developer {
                                id.set('atsushieno')
                                name.set('Atsushi Eno')
                                email.set('atsushieno@gmail.com')
                            }
                        }
                    }
                }

                maven(MavenPublication) {
                    groupId = group
                    artifactId = "alsakt-javacpp"
                    from components.java
                }
            }
        }

        apply from: "${rootDir}/publish-module.gradle"

        // keep it as is. It is replaced by CI release builds
        signing {}
    }
}
